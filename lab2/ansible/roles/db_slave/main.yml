---
- name: Install MySQL Server
  become: true
  ansible.builtin.apt:
    name: mysql-server
    state: present
    update_cache: yes

- name: Update MySQL configuration for db_slave
  become: true
  ansible.builtin.lineinfile:
    path: /etc/mysql/my.cnf
    line: "{{ item }}"
    create: yes
  with_items:
    - "[mysqld]"
    - "port={{ db_slave_port }}"
    - "bind-address = 0.0.0.0"
    - "server-id = 2"
    - "read_only = 1"
    - "log_bin = /var/log/mysql/mysql-bin.log"

- name: Restart MySQL service
  become: true
  ansible.builtin.service:
    name: mysql
    state: restarted

- name: Create MySQL user and database
  become: true
  ansible.builtin.mysql_db:
    name: petclinic
    state: present

- name: Create MySQL user for replication
  become: true
  ansible.builtin.mysql_user:
    name: petclinic
    password: petclinic
    host: "%"
    state: present
    priv: "petclinic.*:ALL"

- name: Set up MySQL replication
  become: true
  ansible.builtin.mysql_replication:
    mode: slave
    master_host: "{{ db_master_ip }}"
    master_port: "{{ db_master_port }}"
    master_user: replica_petclinic
    master_password: replica_petclinic
    state: present

- name: Download MySQL schema
  become: true
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/spring-petclinic/spring-petclinic-rest/refs/heads/master/src/main/resources/db/mysql/schema.sql
    dest: /root/schema.sql

- name: Apply MySQL schema
  become: true
  ansible.builtin.shell: |
    sed -i '1 i\USE petclinic;' /root/schema.sql
    cat /root/schema.sql | mysql -u root -p

- name: Start MySQL Slave
  become: true
  ansible.builtin.mysql_replication:
    mode: slave
    state: start
